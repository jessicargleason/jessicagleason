/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}@-webkit-keyframes sea{0%{background-position:0 0}to{background-position:-1200px 0}}@keyframes sea{0%{background-position:0 0}to{background-position:-1200px 0}}@-webkit-keyframes sky{0%{background-position:0 0}to{background-position:-1200px 0}}@keyframes sky{0%{background-position:0 0}to{background-position:-1200px 0}}@-webkit-keyframes bounce{0%{top:-3px}to{top:-5px}}@keyframes bounce{0%{top:-3px}to{top:-5px}}@-webkit-keyframes border{0%{-webkit-mask-box-image-width:0 0 70px 0;mask-border-width:0 0 70px 0}to{-webkit-mask-box-image-width:0 0 50px 0;mask-border-width:0 0 50px 0}}@keyframes border{0%{-webkit-mask-box-image-width:0 0 70px 0;mask-border-width:0 0 70px 0}to{-webkit-mask-box-image-width:0 0 50px 0;mask-border-width:0 0 50px 0}}@-webkit-keyframes seahorse{0%{top:0;left:0}25%{left:10px;top:25%}50%{left:20px;top:50%}75%{left:10px;top:25%}to{left:0;top:0}}@keyframes seahorse{0%{top:0;left:0}25%{left:10px;top:25%}50%{left:20px;top:50%}75%{left:10px;top:25%}to{left:0;top:0}}@-webkit-keyframes diver{0%{top:0}50%{top:10px}to{top:0}}@keyframes diver{0%{top:0}50%{top:10px}to{top:0}}@-webkit-keyframes fish{0%{margin-top:0}50%{margin-top:5px}to{margin-top:0}}@keyframes fish{0%{margin-top:0}50%{margin-top:5px}to{margin-top:0}}body{background:url(../img/sea-repeat-xy.jpg) repeat;color:#1d1513;padding:0;font-family:"Bree Serif",serif;-webkit-animation:sea 60s linear infinite;animation:sea 60s linear infinite;background-position:0 0;font-size:18px;line-height:1.4}header{background:url(../img/sky-repeat-xy.jpg) repeat;-webkit-animation:sky 60s linear infinite;animation:sky 60s linear infinite;animation-direction:reverse;height:100vh;overflow:hidden;-webkit-mask-box-image:url(../img/wave.svg) 44 repeat;mask-border:url(../img/wave.svg) 44 repeat;-webkit-mask-box-image-width:0 0 70px 0;mask-border-width:0 0 70px 0}footer,header{text-align:center}footer{background:url(../img/sand.png) repeat-x;background-position:0 100%;min-height:190px;padding:0 15px 25px;display:grid;grid-template-columns:1fr;align-items:end}@media screen and (min-width:900px){footer{grid-template-columns:25% 50% 25%;align-items:center}}article{min-height:80vh;margin:auto;padding-left:15px;padding-right:15px;padding-top:5vh}.grid{display:grid;grid-gap:30px;grid-template-columns:1fr;grid-template-rows:repeat(5,auto)}@media screen and (min-width:900px){.grid{grid-template-columns:1fr minmax(-webkit-min-content,300px) minmax(-webkit-min-content,300px) minmax(-webkit-min-content,300px) 1fr;grid-template-columns:1fr minmax(min-content,300px) minmax(min-content,300px) minmax(min-content,300px) 1fr}}.deco{display:none;position:relative;max-width:100%}@media screen and (min-width:900px){.deco{display:block}}.deco img{max-width:100%}.seahorse{-webkit-animation:seahorse 6s ease-in-out infinite;animation:seahorse 6s ease-in-out infinite}.diver,.seahorse{position:relative}.diver{-webkit-animation:diver 3s ease-in infinite;animation:diver 3s ease-in infinite}.fish-1{-webkit-animation:fish 3s ease-in infinite;animation:fish 3s ease-in infinite}.fish-1,.fish-2{position:absolute;right:0}.fish-2{-webkit-animation:fish 2s ease-in infinite;animation:fish 2s ease-in infinite}@media screen and (min-width:900px){.col-2{grid-column-start:2}.col-3{grid-column-start:3}.span-2{grid-column-end:span 2}.span-3{grid-column-end:span 3}.row-2{grid-row:span 2}}a:link{color:#0070a3}a:visited{color:#059b00}.intro{position:absolute;top:50%;width:100%;-webkit-transform:translateY(-50%);transform:translateY(-50%);font-size:1.5em;padding-left:15px;padding-right:15px}.button,button{display:inline-block;padding:10px 15px;margin:5px;border-radius:5px;border:none;background-color:#0070a3;color:#fff;cursor:pointer}.button:link,.button:visited,button:link,button:visited{color:#fff;text-decoration:none}.intro-button:after{content:"\2193";position:relative;-webkit-animation:bounce .5s ease-in-out infinite;animation:bounce .5s ease-in-out infinite;padding-left:10px}.button:hover,button:hover{background-color:#008fd1}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
